from django.conf import settings


class TablesDatabaseRouter(object):
    """
    This database router is used to check if the model is a generated table model. If so
    the configurable USER_TABLE_DATABASE connection must be used instead of the default
    one. This is so that the user tables can be stored into another database.
    """

    @staticmethod
    def user_table_database_if_generated_table_database(model):
        # If the model is generated by the Table model then we want to use the
        # USER_TABLE_DATABASE because it could be that the user data does not live in
        # the default database. This is also the case when the model is automatically
        # created by a generated table model.
        if hasattr(model, "_generated_table_model") or (
            model._meta.auto_created
            and hasattr(model._meta.auto_created, "_generated_table_model")
        ):
            return settings.USER_TABLE_DATABASE

    def db_for_read(self, model, **hints):
        return self.user_table_database_if_generated_table_database(model)

    def db_for_write(self, model, **hints):
        return self.user_table_database_if_generated_table_database(model)

    def allow_relation(self, obj1, obj2, **hints):
        """
        We explicitly want to allow relations between the two databases. This way a
        database table can make references to for example a select option.
        """

        allowed = ("default", settings.USER_TABLE_DATABASE)
        if obj1._state.db in allowed and obj2._state.db in allowed:
            return True
        return None
